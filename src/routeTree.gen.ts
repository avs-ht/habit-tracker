/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SoraIndexImport } from './routes/sora/index'
import { Route as ShopIndexImport } from './routes/shop/index'
import { Route as SettingsIndexImport } from './routes/settings/index'
import { Route as RatingIndexImport } from './routes/rating/index'
import { Route as ProfileIndexImport } from './routes/profile/index'
import { Route as DicesIndexImport } from './routes/dices/index'
import { Route as TestLayoutImport } from './routes/test/_layout'
import { Route as HabitsLayoutImport } from './routes/habits/_layout'
import { Route as TestLayoutIndexImport } from './routes/test/_layout/index'
import { Route as SoraTasksIndexImport } from './routes/sora/tasks/index'
import { Route as ProfileStatsIndexImport } from './routes/profile/stats/index'
import { Route as ProfileNewIndexImport } from './routes/profile/new/index'
import { Route as HabitsNewIndexImport } from './routes/habits/new/index'
import { Route as HabitsLayoutIndexImport } from './routes/habits/_layout/index'
import { Route as HabitsHabitIdIndexImport } from './routes/habits/$habitId/index'
import { Route as DicesOpenIndexImport } from './routes/dices/open/index'
import { Route as TestLayoutUsersImport } from './routes/test/_layout/users'
import { Route as TestLayoutUploadImport } from './routes/test/_layout/upload'
import { Route as TestLayoutTimeImport } from './routes/test/_layout/time'
import { Route as HabitsLayoutRequestsImport } from './routes/habits/_layout/requests'
import { Route as HabitsHabitIdHistoryIndexImport } from './routes/habits/$habitId/history/index'

// Create Virtual Routes

const TestImport = createFileRoute('/test')()
const HabitsImport = createFileRoute('/habits')()

// Create/Update Routes

const TestRoute = TestImport.update({
  path: '/test',
  getParentRoute: () => rootRoute,
} as any)

const HabitsRoute = HabitsImport.update({
  path: '/habits',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SoraIndexRoute = SoraIndexImport.update({
  path: '/sora/',
  getParentRoute: () => rootRoute,
} as any)

const ShopIndexRoute = ShopIndexImport.update({
  path: '/shop/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsIndexRoute = SettingsIndexImport.update({
  path: '/settings/',
  getParentRoute: () => rootRoute,
} as any)

const RatingIndexRoute = RatingIndexImport.update({
  path: '/rating/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileIndexRoute = ProfileIndexImport.update({
  path: '/profile/',
  getParentRoute: () => rootRoute,
} as any)

const DicesIndexRoute = DicesIndexImport.update({
  path: '/dices/',
  getParentRoute: () => rootRoute,
} as any)

const TestLayoutRoute = TestLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => TestRoute,
} as any)

const HabitsLayoutRoute = HabitsLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => HabitsRoute,
} as any)

const TestLayoutIndexRoute = TestLayoutIndexImport.update({
  path: '/',
  getParentRoute: () => TestLayoutRoute,
} as any)

const SoraTasksIndexRoute = SoraTasksIndexImport.update({
  path: '/sora/tasks/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileStatsIndexRoute = ProfileStatsIndexImport.update({
  path: '/profile/stats/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileNewIndexRoute = ProfileNewIndexImport.update({
  path: '/profile/new/',
  getParentRoute: () => rootRoute,
} as any)

const HabitsNewIndexRoute = HabitsNewIndexImport.update({
  path: '/new/',
  getParentRoute: () => HabitsRoute,
} as any)

const HabitsLayoutIndexRoute = HabitsLayoutIndexImport.update({
  path: '/',
  getParentRoute: () => HabitsLayoutRoute,
} as any)

const HabitsHabitIdIndexRoute = HabitsHabitIdIndexImport.update({
  path: '/$habitId/',
  getParentRoute: () => HabitsRoute,
} as any)

const DicesOpenIndexRoute = DicesOpenIndexImport.update({
  path: '/dices/open/',
  getParentRoute: () => rootRoute,
} as any)

const TestLayoutUsersRoute = TestLayoutUsersImport.update({
  path: '/users',
  getParentRoute: () => TestLayoutRoute,
} as any)

const TestLayoutUploadRoute = TestLayoutUploadImport.update({
  path: '/upload',
  getParentRoute: () => TestLayoutRoute,
} as any)

const TestLayoutTimeRoute = TestLayoutTimeImport.update({
  path: '/time',
  getParentRoute: () => TestLayoutRoute,
} as any)

const HabitsLayoutRequestsRoute = HabitsLayoutRequestsImport.update({
  path: '/requests',
  getParentRoute: () => HabitsLayoutRoute,
} as any)

const HabitsHabitIdHistoryIndexRoute = HabitsHabitIdHistoryIndexImport.update({
  path: '/$habitId/history/',
  getParentRoute: () => HabitsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/habits': {
      preLoaderRoute: typeof HabitsImport
      parentRoute: typeof rootRoute
    }
    '/habits/_layout': {
      preLoaderRoute: typeof HabitsLayoutImport
      parentRoute: typeof HabitsRoute
    }
    '/test': {
      preLoaderRoute: typeof TestImport
      parentRoute: typeof rootRoute
    }
    '/test/_layout': {
      preLoaderRoute: typeof TestLayoutImport
      parentRoute: typeof TestRoute
    }
    '/dices/': {
      preLoaderRoute: typeof DicesIndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/': {
      preLoaderRoute: typeof ProfileIndexImport
      parentRoute: typeof rootRoute
    }
    '/rating/': {
      preLoaderRoute: typeof RatingIndexImport
      parentRoute: typeof rootRoute
    }
    '/settings/': {
      preLoaderRoute: typeof SettingsIndexImport
      parentRoute: typeof rootRoute
    }
    '/shop/': {
      preLoaderRoute: typeof ShopIndexImport
      parentRoute: typeof rootRoute
    }
    '/sora/': {
      preLoaderRoute: typeof SoraIndexImport
      parentRoute: typeof rootRoute
    }
    '/habits/_layout/requests': {
      preLoaderRoute: typeof HabitsLayoutRequestsImport
      parentRoute: typeof HabitsLayoutImport
    }
    '/test/_layout/time': {
      preLoaderRoute: typeof TestLayoutTimeImport
      parentRoute: typeof TestLayoutImport
    }
    '/test/_layout/upload': {
      preLoaderRoute: typeof TestLayoutUploadImport
      parentRoute: typeof TestLayoutImport
    }
    '/test/_layout/users': {
      preLoaderRoute: typeof TestLayoutUsersImport
      parentRoute: typeof TestLayoutImport
    }
    '/dices/open/': {
      preLoaderRoute: typeof DicesOpenIndexImport
      parentRoute: typeof rootRoute
    }
    '/habits/$habitId/': {
      preLoaderRoute: typeof HabitsHabitIdIndexImport
      parentRoute: typeof HabitsImport
    }
    '/habits/_layout/': {
      preLoaderRoute: typeof HabitsLayoutIndexImport
      parentRoute: typeof HabitsLayoutImport
    }
    '/habits/new/': {
      preLoaderRoute: typeof HabitsNewIndexImport
      parentRoute: typeof HabitsImport
    }
    '/profile/new/': {
      preLoaderRoute: typeof ProfileNewIndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/stats/': {
      preLoaderRoute: typeof ProfileStatsIndexImport
      parentRoute: typeof rootRoute
    }
    '/sora/tasks/': {
      preLoaderRoute: typeof SoraTasksIndexImport
      parentRoute: typeof rootRoute
    }
    '/test/_layout/': {
      preLoaderRoute: typeof TestLayoutIndexImport
      parentRoute: typeof TestLayoutImport
    }
    '/habits/$habitId/history/': {
      preLoaderRoute: typeof HabitsHabitIdHistoryIndexImport
      parentRoute: typeof HabitsImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  HabitsRoute.addChildren([
    HabitsLayoutRoute.addChildren([
      HabitsLayoutRequestsRoute,
      HabitsLayoutIndexRoute,
    ]),
    HabitsHabitIdIndexRoute,
    HabitsNewIndexRoute,
    HabitsHabitIdHistoryIndexRoute,
  ]),
  TestRoute.addChildren([
    TestLayoutRoute.addChildren([
      TestLayoutTimeRoute,
      TestLayoutUploadRoute,
      TestLayoutUsersRoute,
      TestLayoutIndexRoute,
    ]),
  ]),
  DicesIndexRoute,
  ProfileIndexRoute,
  RatingIndexRoute,
  SettingsIndexRoute,
  ShopIndexRoute,
  SoraIndexRoute,
  DicesOpenIndexRoute,
  ProfileNewIndexRoute,
  ProfileStatsIndexRoute,
  SoraTasksIndexRoute,
])

/* prettier-ignore-end */
